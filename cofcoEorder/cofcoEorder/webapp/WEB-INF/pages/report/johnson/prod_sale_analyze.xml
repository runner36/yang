<?xml version="1.0" encoding="UTF-8"?>
<config showSql="true" cacheTime="0" firstQuery="false" paging="false">
	<title>产品销售分析报表</title>
	
	<header>
		<column property="0" title="大区" style="text-align:left"/>
		<column property="1" title="省" style="text-align:left"/>
		<column property="2" title="城市" style="text-align:left"/>
		<column property="3" title="经销商名称" style="text-align:left"/>
		<column property="4" title="经销商编码" style="text-align:left"/>
		<column property="5" title="品类" style="text-align:left" />
		<column property="6" title="产品代码" style="text-align:left" />
		<column property="7" title="产品名称" style="text-align:left" />
		
		<column property="8" title="进货金额" style="text-align:right" cell="number" format="#0.00"/>
		<column property="9" title="进货数量" style="text-align:right" cell="number" format="#0.00"/>		
		<column property="10" title="销售金额" style="text-align:right" cell="number" format="#0.00"/>
		<column property="11" title="销售数量" style="text-align:right" cell="number" format="#0.00"/>
		<column property="12" title="退货金额" style="text-align:right" cell="number" format="#0.00"/>
		<column property="13" title="退货数量" style="text-align:right" cell="number" format="#0.00"/>
		
		<column property="14" title="净销售金额" style="text-align:right" cell="number" format="#0.00"/>
		<column property="15" title="净销售数量" style="text-align:right" cell="number" format="#0.00"/>
		<column property="16" title="净销售金额贡献率" style="text-align:right" />
		<column property="17" title="净销售数量贡献率" style="text-align:right" />		
	</header>
	
	<content>
		<!-- 开始时间 结束时间 -->
        <param id="startDate" isDisplay="1" displayName="开始时间"  template="">$startDate$</param>
		<param id="endDate" isDisplay="1" displayName="结束时间"  template="">$endDate$</param>
		<!-- 组织 -->
		<param id="orgId"  template=" and bo.ORG_ID in ($orgId$) ">$orgId$</param>
		<param id="orgName" isDisplay="1" displayName="组织"  template="">$orgName$</param>
		<!-- 渠道 -->
		<param id="channelId"  template=" and ms.CHANNEL_ID in ($channelId$) ">$channelId$</param>
		<param id="channelName" isDisplay="1" displayName="客户销售分类"  template="">$channelName$</param>
		<!-- 门店类型 -->
		<param id="storeTypeId"  template=" and ms.TYPE_ID in ($storeTypeId$) ">$storeTypeId$</param>
		<param id="storeTypeName" isDisplay="1" displayName="渠道"  template="">$storeTypeName$</param>
		<!-- 经销商 -->
		<param id="distId"  template=" and md.DIST_ID in ($distId$) ">$distId$</param>
		<param id="distCode" isDisplay="1" displayName="经销商编码"  template=" and md.DIST_CODE like '%$distCode$%' ">$distCode$</param>
		<param id="distName" isDisplay="1" displayName="经销商名称"  template="">$distName$</param>
		<!-- 客户名称 客户编码 -->
		<param id="customerCode" isDisplay="1" displayName="强生客户代码"  template=" and ms.STORE_CODE like '%$customerCode$%' ">$customerCode$</param>
		<param id="customerName" isDisplay="1" displayName="强生客户名称"  template=" and ms.STORE_NAME like '%$customerName$%' ">$customerName$</param>
		<!-- 产品品牌 -->
		<param id="prodBrandId"  template=" and p.BRAND_ID in ($prodBrandId$) ">$prodBrandId$</param>
		<param id="prodBrandName" isDisplay="1" displayName="产品品牌"  template="">$prodBrandName$</param>
		<!-- 产品品类 -->
		<param id="prodTypeId"  template=" and p.TYPE_ID in ($prodTypeId$) ">$prodTypeId$</param>
		<param id="prodTypeName" isDisplay="1" displayName="产品品类"  template="">$prodTypeName$</param>
		<!-- 产品名称 产品编码 -->
		<param id="prodCode" isDisplay="1" displayName="产品代码"  template=" and p.PROD_CODE like '%$prodCode$%' ">$prodCode$</param>		
		<param id="prodId" isDisplay="1" displayName="产品名称"  template=" and p.PROD_NAME like '%$prodId$%' ">$prodId$</param>
		
		<sql>
          <![CDATA[
--定义变量，用于计算“净销售金额贡献率” “净销售数量贡献率” 列的值用，每次用的值相同，提高效率
DECLARE @totalNumAmount DECIMAL(18,8), @totalNumQli DECIMAL(18,8)
SET @totalNumAmount=0
SET @totalNumQli=0;

WITH amount AS (
	SELECT 	CASE WHEN (dds.PROD_QUANTITY*dds.PROD_PRICE) >= 0 THEN (dds.PROD_QUANTITY*dds.PROD_PRICE)/1.17 ELSE 0 END  AS PROD_AMOUNT,
			CASE WHEN (dds.PROD_QUANTITY*dds.PROD_PRICE) < 0 THEN (dds.PROD_QUANTITY*dds.PROD_PRICE)/1.17 ELSE 0 END  AS R_PROD_AMOUNT
	
	FROM 	DMS_DATA_SALE dds
			INNER JOIN DMS_PROD_MAPPING mp ON dds.PROD_CODE=mp.DIST_PROD_CODE AND dds.CLIENT_ID=mp.CLIENT_ID AND dds.PROD_UNIT=mp.DIST_PROD_UNIT AND dds.PROD_NAME=mp.DIST_PROD_NAME
			INNER JOIN MDM_PRODUCT p ON p.PROD_CODE=mp.TARGET_PROD_CODE 
			LEFT JOIN BASE_DICT_ITEM prodType ON prodType.DICT_ITEM_ID=p.TYPE_ID AND prodType.DICT_ID='prodType'
			--关联门店
			LEFT JOIN DMS_STORE_MAPPING dsm ON dds.STORE_CODE = dsm.DIST_STORE_CODE AND dds.CLIENT_ID=dsm.CLIENT_ID
			LEFT JOIN MDM_STORE ms ON ms.STORE_CODE = dsm.target_store_code
			--关联客户端、经销商
			INNER JOIN DMS_CLIENT dc ON dds.CLIENT_ID = dc.CLIENT_ID
			INNER JOIN MDM_DISTRIBUTOR md ON md.DIST_ID = dc.DIST_ID and md.CHECK_DATE IS NOT NULL 
			--关联组织
			INNER JOIN BASE_ORG bo ON bo.ORG_ID = md.ORG_ID
	
	WHERE 	dds.BILL_DATE >= '$startDate$' AND dds.BILL_DATE <= '$endDate$' and dds.STATE=1 
			$orgId$ $distId$ $distCode$ $customerCode$ $customerName$ $prodId$ $prodCode$ 
			$channelId$ $storeTypeId$ $prodBrandId$ $prodTypeId$
			AND p.PROD_CODE NOT IN ('zengpin','tingchan','qita')
)
SELECT @totalNumAmount=sum(PROD_AMOUNT+R_PROD_AMOUNT)  FROM amount;
WITH qli AS (
	SELECT 	CASE WHEN dds.PROD_QUANTITY >= 0 THEN dbo.fn_getUnitConvById(mp.TARGET_UNIT_ID, p.PROD_COUNTUNIT_ID, mp.TARGET_PROD_CODE, dds.PROD_QUANTITY) ELSE 0 END  AS PROD_QUANTITY,		
			CASE WHEN dds.PROD_QUANTITY < 0 THEN dbo.fn_getUnitConvById(mp.TARGET_UNIT_ID, p.PROD_COUNTUNIT_ID, mp.TARGET_PROD_CODE, dds.PROD_QUANTITY) ELSE 0 END  AS R_PROD_QUANTITY
						
	FROM 	DMS_DATA_SALE dds
			INNER JOIN DMS_PROD_MAPPING mp ON dds.PROD_CODE=mp.DIST_PROD_CODE AND dds.CLIENT_ID=mp.CLIENT_ID AND dds.PROD_UNIT=mp.DIST_PROD_UNIT AND dds.PROD_NAME=mp.DIST_PROD_NAME
			INNER JOIN MDM_PRODUCT p ON p.PROD_CODE=mp.TARGET_PROD_CODE 
			LEFT JOIN BASE_DICT_ITEM prodType ON prodType.DICT_ITEM_ID=p.TYPE_ID AND prodType.DICT_ID='prodType'
			--关联门店
			LEFT JOIN DMS_STORE_MAPPING dsm ON dds.STORE_CODE = dsm.DIST_STORE_CODE AND dds.CLIENT_ID=dsm.CLIENT_ID
			LEFT JOIN MDM_STORE ms ON ms.STORE_CODE = dsm.target_store_code
			--关联客户端、经销商
			INNER JOIN DMS_CLIENT dc ON dds.CLIENT_ID = dc.CLIENT_ID
			INNER JOIN MDM_DISTRIBUTOR md ON md.DIST_ID = dc.DIST_ID and md.CHECK_DATE IS NOT NULL 
			--关联组织
			INNER JOIN BASE_ORG bo ON bo.ORG_ID = md.ORG_ID
	
	WHERE 	dds.BILL_DATE >= '$startDate$' AND dds.BILL_DATE <= '$endDate$' and dds.STATE=1 
			$orgId$ $distId$ $distCode$ $customerCode$ $customerName$ $prodId$ $prodCode$ 
			$channelId$ $storeTypeId$ $prodBrandId$ $prodTypeId$
			AND p.PROD_CODE NOT IN ('zengpin','tingchan','qita')
)
SELECT @totalNumQli=sum(PROD_QUANTITY+R_PROD_QUANTITY)  FROM qli;



WITH PURCHASE AS (
	SELECT 	dds.CLIENT_ID AS CLIENT_ID, bo.ORG_ID AS ORG_ID, md.DIST_CODE AS DIST_CODE, 
			md.DIST_NAME AS DIST_NAME, p.PROD_CODE AS PROD_CODE, p.PROD_NAME AS PROD_NAME, prodType.ITEM_NAME AS PROD_TYPE
			,sum(isnull((dds.PROD_QUANTITY*dds.PROD_PRICE),0)) AS PROD_AMOUNT
			,sum(dbo.fn_getUnitConvById(mp.TARGET_UNIT_ID, p.PROD_COUNTUNIT_ID, mp.TARGET_PROD_CODE, dds.PROD_QUANTITY)) AS PROD_QUANTITY
			
	FROM 	DMS_DATA_PURCHASE dds
			INNER JOIN DMS_PROD_MAPPING mp ON dds.PROD_CODE=mp.DIST_PROD_CODE AND dds.CLIENT_ID=mp.CLIENT_ID AND dds.PROD_UNIT=mp.DIST_PROD_UNIT AND dds.PROD_NAME=mp.DIST_PROD_NAME
			INNER JOIN MDM_PRODUCT p ON p.PROD_CODE=mp.TARGET_PROD_CODE 
			LEFT JOIN BASE_DICT_ITEM prodType ON prodType.DICT_ITEM_ID=p.TYPE_ID AND prodType.DICT_ID='prodType'
			--关联客户端、经销商
			INNER JOIN DMS_CLIENT dc ON dds.CLIENT_ID = dc.CLIENT_ID
			INNER JOIN MDM_DISTRIBUTOR md ON md.DIST_ID = dc.DIST_ID and md.CHECK_DATE IS NOT NULL 
			--关联组织
			INNER JOIN BASE_ORG bo ON bo.ORG_ID = md.ORG_ID
			
	WHERE 	dds.BILL_DATE >= '$startDate$' AND dds.BILL_DATE <= '$endDate$' and dds.STATE=1
			$orgId$ $distId$ $distCode$ $prodId$ $prodCode$ 
			$prodBrandId$ $prodTypeId$
			AND p.PROD_CODE NOT IN ('zengpin','tingchan','qita')
			
	GROUP BY dds.CLIENT_ID, bo.ORG_ID, md.DIST_CODE, md.DIST_NAME, p.PROD_CODE, p.PROD_NAME, prodType.ITEM_NAME
)

,sale AS (
	SELECT 	dds.CLIENT_ID AS CLIENT_ID, bo.ORG_ID AS ORG_ID, md.DIST_CODE AS DIST_CODE, 
			md.DIST_NAME AS DIST_NAME, p.PROD_CODE AS PROD_CODE, p.PROD_NAME AS PROD_NAME, prodType.ITEM_NAME AS PROD_TYPE,  
			CASE WHEN (dds.PROD_QUANTITY*dds.PROD_PRICE) >= 0 THEN (dds.PROD_QUANTITY*dds.PROD_PRICE)/1.17 ELSE 0 END  AS PROD_AMOUNT,
			CASE WHEN (dds.PROD_QUANTITY*dds.PROD_PRICE) < 0 THEN (dds.PROD_QUANTITY*dds.PROD_PRICE)/1.17 ELSE 0 END  AS R_PROD_AMOUNT,
	 		CASE WHEN dds.PROD_QUANTITY >= 0 THEN dbo.fn_getUnitConvById(mp.TARGET_UNIT_ID, p.PROD_COUNTUNIT_ID, mp.TARGET_PROD_CODE, dds.PROD_QUANTITY) ELSE 0 END  AS PROD_QUANTITY,		
			CASE WHEN dds.PROD_QUANTITY < 0 THEN dbo.fn_getUnitConvById(mp.TARGET_UNIT_ID, p.PROD_COUNTUNIT_ID, mp.TARGET_PROD_CODE, dds.PROD_QUANTITY) ELSE 0 END  AS R_PROD_QUANTITY
						
	FROM 	DMS_DATA_SALE dds
			INNER JOIN DMS_PROD_MAPPING mp ON dds.PROD_CODE=mp.DIST_PROD_CODE AND dds.CLIENT_ID=mp.CLIENT_ID AND dds.PROD_UNIT=mp.DIST_PROD_UNIT AND dds.PROD_NAME=mp.DIST_PROD_NAME
			INNER JOIN MDM_PRODUCT p ON p.PROD_CODE=mp.TARGET_PROD_CODE 
			LEFT JOIN BASE_DICT_ITEM prodType ON prodType.DICT_ITEM_ID=p.TYPE_ID AND prodType.DICT_ID='prodType'
			--关联门店
			LEFT JOIN DMS_STORE_MAPPING dsm ON dds.STORE_CODE = dsm.DIST_STORE_CODE AND dds.CLIENT_ID=dsm.CLIENT_ID
			LEFT JOIN MDM_STORE ms ON ms.STORE_CODE = dsm.target_store_code
			--关联客户端、经销商
			INNER JOIN DMS_CLIENT dc ON dds.CLIENT_ID = dc.CLIENT_ID
			INNER JOIN MDM_DISTRIBUTOR md ON md.DIST_ID = dc.DIST_ID and md.CHECK_DATE IS NOT NULL 
			--关联组织
			INNER JOIN BASE_ORG bo ON bo.ORG_ID = md.ORG_ID
	
	WHERE 	dds.BILL_DATE >= '$startDate$' AND dds.BILL_DATE <= '$endDate$' and dds.STATE=1
			$orgId$ $distId$ $distCode$ $customerCode$ $customerName$ $prodId$ $prodCode$ 
			$channelId$ $storeTypeId$ $prodBrandId$ $prodTypeId$
			AND p.PROD_CODE NOT IN ('zengpin','tingchan','qita')
)

,sale_detail AS (
	SELECT  s.CLIENT_ID AS CLIENT_ID, s.ORG_ID AS ORG_ID, s.DIST_CODE AS DIST_CODE, s.DIST_NAME AS DIST_NAME, 
			s.PROD_CODE AS PROD_CODE, s.PROD_NAME AS PROD_NAME, s.PROD_TYPE AS PROD_TYPE,
			sum(s.PROD_AMOUNT) AS PROD_AMOUNT, sum(s.PROD_QUANTITY) AS PROD_QUANTITY,
			sum(s.R_PROD_AMOUNT) AS R_PROD_AMOUNT, sum(s.R_PROD_QUANTITY) AS R_PROD_QUANTITY,
			
			CASE WHEN sum(R_PROD_AMOUNT)>0 THEN sum(s.PROD_AMOUNT-R_PROD_AMOUNT)
			ELSE sum(s.PROD_AMOUNT+R_PROD_AMOUNT)
			END AS N_PROD_AMOUNT,
			
			CASE WHEN sum(R_PROD_QUANTITY)>0 THEN sum(s.PROD_QUANTITY-R_PROD_QUANTITY)
			ELSE sum(s.PROD_QUANTITY+R_PROD_QUANTITY)
			END AS N_PROD_QUANTITY
						
	FROM sale AS s
	GROUP BY s.CLIENT_ID, s.ORG_ID, s.DIST_CODE, s.DIST_NAME, s.PROD_CODE, s.PROD_NAME, s.PROD_TYPE
)
,sale_total AS (
	SELECT 
		sum(s.PROD_AMOUNT) AS PROD_AMOUNT, sum(s.PROD_QUANTITY) AS PROD_QUANTITY, 
		sum(s.R_PROD_AMOUNT) AS R_PROD_AMOUNT, sum(s.R_PROD_QUANTITY) AS R_PROD_QUANTITY,
		
		CASE WHEN sum(s.R_PROD_AMOUNT)>0 THEN sum(s.PROD_AMOUNT-s.R_PROD_AMOUNT)
		ELSE sum(s.PROD_AMOUNT+s.R_PROD_AMOUNT)
		END AS N_PROD_AMOUNT,
		
		CASE WHEN sum(s.R_PROD_QUANTITY)>0 THEN sum(s.PROD_QUANTITY-s.R_PROD_QUANTITY)
		ELSE sum(s.PROD_QUANTITY+s.R_PROD_QUANTITY)
		END AS N_PROD_QUANTITY
				
	FROM sale AS s
)
,p_total AS (
	SELECT sum(p.PROD_AMOUNT) AS PROD_AMOUNT, sum(p.PROD_QUANTITY) AS PROD_QUANTITY
	FROM sale_detail AS sd FULL JOIN PURCHASE AS p ON sd.PROD_CODE=p.PROD_CODE AND sd.PROD_NAME=p.PROD_NAME AND sd.CLIENT_ID=p.CLIENT_ID AND p.PROD_TYPE=sd.PROD_TYPE
)

--明细
SELECT 	(SELECT bo.PN2 FROM BASE_ORG bo WHERE bo.ORG_ID=(CASE WHEN sd.ORG_ID IS NULL THEN p.ORG_ID ELSE sd.ORG_ID END) AND bo.STATE=1) AS region, 
		(SELECT bo.PN4 FROM BASE_ORG bo WHERE bo.ORG_ID=(CASE WHEN sd.ORG_ID IS NULL THEN p.ORG_ID ELSE sd.ORG_ID END) AND bo.STATE=1) AS province, 
		(SELECT bo.ORG_NAME FROM BASE_ORG bo WHERE bo.ORG_ID=(CASE WHEN sd.ORG_ID IS NULL THEN p.ORG_ID ELSE sd.ORG_ID END) AND bo.STATE=1) AS city, 
		CASE WHEN sd.DIST_NAME IS NULL THEN p.DIST_NAME ELSE sd.DIST_NAME END AS DIST_NAME, 
		CASE WHEN sd.DIST_CODE IS NULL THEN p.DIST_CODE ELSE sd.DIST_CODE END AS DIST_CODE, 
		CASE WHEN sd.PROD_TYPE IS NULL THEN p.PROD_TYPE ELSE sd.PROD_TYPE END AS PROD_TYPE, --产品品类（后加）
		CASE WHEN sd.PROD_CODE IS NULL THEN p.PROD_CODE ELSE sd.PROD_CODE END AS PROD_CODE, 
		CASE WHEN sd.PROD_NAME IS NULL THEN p.PROD_NAME ELSE sd.PROD_NAME END AS PROD_NAME, 		
		
		isnull(p.PROD_AMOUNT,0) AS PROD_AMOUNT, isnull(p.PROD_QUANTITY,0) AS PROD_QUANTITY,	--'进货'
		isnull(sd.PROD_AMOUNT,0) AS PROD_AMOUNT, isnull(sd.PROD_QUANTITY,0) AS PROD_QUANTITY,--'销售'
		isnull(sd.R_PROD_AMOUNT,0) AS R_PROD_AMOUNT, isnull(sd.R_PROD_QUANTITY,0) AS R_PROD_QUANTITY, --'退货'
		isnull(sd.N_PROD_AMOUNT,0) AS N_PROD_AMOUNT, isnull(sd.N_PROD_QUANTITY,0) AS N_PROD_QUANTITY --'净销售'
		
		,CASE WHEN isnull(N_PROD_AMOUNT,0)=0 THEN '-'
			ELSE CASE WHEN @totalNumAmount=0 THEN '-'
			ELSE CAST(CAST(N_PROD_AMOUNT/@totalNumAmount*100 AS decimal(38,2)) AS VARCHAR)+'%'
		END END
		
 		,CASE WHEN isnull(N_PROD_QUANTITY,0)=0 THEN '-'
			ELSE CASE WHEN @totalNumQli=0 THEN '-'
			ELSE CAST(CAST(N_PROD_QUANTITY/@totalNumQli*100 AS decimal(38,2)) AS VARCHAR)+'%'
		END END 
		
FROM 	sale_detail AS sd FULL JOIN PURCHASE AS p ON sd.PROD_CODE=p.PROD_CODE AND sd.PROD_NAME=p.PROD_NAME AND sd.CLIENT_ID=p.CLIENT_ID AND p.PROD_TYPE=sd.PROD_TYPE


UNION ALL 


--汇总
SELECT 	'合计：', '', '', '', '', '', '', '',
		isnull(p.PROD_AMOUNT,0), isnull(p.PROD_QUANTITY,0),
		isnull(st.PROD_AMOUNT,0), isnull(st.PROD_QUANTITY,0), 
		isnull(st.R_PROD_AMOUNT,0), isnull(st.R_PROD_QUANTITY,0),
		
		CASE WHEN st.R_PROD_AMOUNT>0 THEN st.PROD_AMOUNT-st.R_PROD_AMOUNT
		ELSE st.PROD_AMOUNT+st.R_PROD_AMOUNT
		END,
 		CASE WHEN st.R_PROD_QUANTITY>0 THEN st.PROD_QUANTITY-st.R_PROD_QUANTITY
		ELSE st.PROD_QUANTITY+st.R_PROD_QUANTITY
		END

		,CASE WHEN isnull(N_PROD_AMOUNT,0)=0 THEN '-'
			ELSE CASE WHEN @totalNumAmount=0 THEN '-'
			ELSE CAST(CAST(N_PROD_AMOUNT/@totalNumAmount*100 AS decimal(38,2)) AS VARCHAR)+'%'
		END END
		
 		,CASE WHEN isnull(N_PROD_QUANTITY,0)=0 THEN '-'
			ELSE CASE WHEN @totalNumQli=0 THEN '-'
			ELSE CAST(CAST(N_PROD_QUANTITY/@totalNumQli*100 AS decimal(38,2)) AS VARCHAR)+'%'
		END END 				
		
FROM sale_total AS st, p_total AS p
 
          ]]>
		</sql>
	</content>
	
</config>
